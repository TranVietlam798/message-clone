[{"C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\index.js":"1","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\serviceWorker.js":"2","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\App.js":"3","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\app\\store.js":"4","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\Imessage.js":"5","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\Sidebar.js":"6","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\SidebarChat.js":"7","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\Chat.js":"8","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\features\\userSlice.js":"9","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\Login.js":"10","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\firebase.js":"11","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\features\\chatSlice.js":"12","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\Message.js":"13","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\axios.js":"14"},{"size":644,"mtime":1609402749010,"results":"15","hashOfConfig":"16"},{"size":5141,"mtime":1609402749010,"results":"17","hashOfConfig":"16"},{"size":947,"mtime":1609406443120,"results":"18","hashOfConfig":"16"},{"size":260,"mtime":1609402749008,"results":"19","hashOfConfig":"16"},{"size":857,"mtime":1609420299065,"results":"20","hashOfConfig":"16"},{"size":2347,"mtime":1609430721331,"results":"21","hashOfConfig":"16"},{"size":1739,"mtime":1609430632469,"results":"22","hashOfConfig":"16"},{"size":2610,"mtime":1609431506389,"results":"23","hashOfConfig":"16"},{"size":462,"mtime":1609402749009,"results":"24","hashOfConfig":"16"},{"size":590,"mtime":1609404636619,"results":"25","hashOfConfig":"16"},{"size":629,"mtime":1609404364450,"results":"26","hashOfConfig":"16"},{"size":548,"mtime":1609405916724,"results":"27","hashOfConfig":"16"},{"size":845,"mtime":1609425292782,"results":"28","hashOfConfig":"16"},{"size":133,"mtime":1609422244576,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"lo4882",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\index.js",[],["64","65"],"C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\serviceWorker.js",[],"C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\App.js",["66"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./App.css\";\r\nimport { selectUser, login, logout } from \"./features/userSlice\";\r\nimport Imessage from \"./Imessage\";\r\nimport Login from \"./Login\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        // user is logged in\r\n        dispatch(\r\n          login({\r\n            uid: authUser.uid,\r\n            photo: authUser.photoURL,\r\n            email: authUser.email,\r\n            displayName: authUser.displayName,\r\n          })\r\n        );\r\n      } else {\r\n        // user is logged out\r\n        dispatch(logout());\r\n      }\r\n    });\r\n    \r\n  }, []);\r\n\r\n  \r\n\r\n  return <div className=\"app\">{user ? <Imessage /> : <Login />}</div>;\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\app\\store.js",[],"C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\Imessage.js",["67","68","69","70"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Chat from \"./Chat\";\r\nimport { setChat } from \"./features/chatSlice\";\r\nimport db from \"./firebase\";\r\nimport \"./Imessage.css\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nfunction Imessage() {\r\n  const dispatch = useDispatch();\r\n\r\n  // useEffect(() => {\r\n  //   db.collection(\"chats\").onSnapshot((snapshot) =>\r\n  //   dispatch(\r\n  //     setChat(\r\n  //       {\r\n  //         chatId: snapshot.docs[0].id,\r\n  //         chatName: snapshot.docs[0].data().chatName\r\n  //       }\r\n  //       // snapshot.docs.map((doc) => ({\r\n  //       //   id: doc.id,\r\n  //       //   data: doc.data(),\r\n  //       // }))\r\n  //     ))\r\n  //   );\r\n  // }, []);\r\n\r\n  return (\r\n    <div className=\"imessage\">\r\n      <Sidebar />\r\n      <Chat />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Imessage;\r\n","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\Sidebar.js",["71"],"import { Avatar, IconButton } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport RateReviewOutlinedIcon from \"@material-ui/icons/RateReviewOutlined\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"./features/userSlice\";\r\nimport db, { auth } from \"./firebase\";\r\nimport Pusher from \"pusher-js\";\r\n\r\nimport axios from \"./axios\";\r\n\r\nconst pusher = new Pusher(\"2571deb02cd38b1a7210\", {\r\n  cluster: \"ap1\",\r\n});\r\n\r\nfunction Sidebar() {\r\n  const user = useSelector(selectUser);\r\n  const [chats, setChats] = useState([]);\r\n\r\n  const getChats = () => {\r\n    axios.get(\"/get/conversationList\").then((res) => {\r\n      setChats(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChats();\r\n\r\n    const channel = pusher.subscribe(\"chats\");\r\n    channel.bind(\"newChat\", function (data) {\r\n      getChats();\r\n    });\r\n  }, []);\r\n\r\n  const addChat = () => {\r\n    const chatName = prompt(\"Please enter a chat name\");\r\n    const fistMsg = prompt(\"please send welcom message\");\r\n    if (chatName && fistMsg) {\r\n      let chatId = \"\";\r\n\r\n      axios\r\n        .post(`/new/conversation`, {\r\n          chatName: chatName,\r\n        })\r\n        .then((res) => {\r\n          chatId = res.data._id;\r\n        })\r\n        .then(() => {\r\n          axios.post(`/new/message?id=${chatId}`, {\r\n            message: fistMsg,\r\n            timestamp: Date.now(),\r\n            user: user,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <Avatar\r\n          onClick={() => auth.signOut()}\r\n          src={user.photo}\r\n          className=\"sidebar__avatar\"\r\n        />\r\n        <div className=\"sidebar__input\">\r\n          <SearchIcon />\r\n          <input placeholder=\"Search\" />\r\n        </div>\r\n\r\n        <IconButton variant=\"outlined\" className=\"sidebar__inputButton\">\r\n          <RateReviewOutlinedIcon onClick={addChat} />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <div className=\"sidebar__chats\">\r\n        {chats.map(({ id, name, timestamp }) => (\r\n          <SidebarChat key={id} id={id} chatName={name} timestamp={timestamp} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\SidebarChat.js",["72","73","74","75"],"import { Avatar } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setChat } from \"./features/chatSlice\";\r\nimport \"./SidebarChat.css\";\r\nimport * as timeago from \"timeago.js\";\r\nimport axios from \"./axios\";\r\nimport Pusher from 'pusher-js'\r\n\r\nconst pusher = new Pusher(\"2571deb02cd38b1a7210\", {\r\n  cluster: \"ap1\",\r\n});\r\n\r\nfunction SidebarChat({ id, chatName }) {\r\n  const dispatch = useDispatch();\r\n  const [chatInfo, setChatInfo] = useState([]);\r\n  const [lastMsg, setLastMsg] = useState(\"\");\r\n  const [lastPhoto, setLastPhoto] = useState(\"\");\r\n  const [lastTimestamp, setLastTimestamp] = useState(\"\");\r\n\r\n  const getSidebarElement = () => {\r\n    axios.get(`/get/lastMessage?id=${id}`).then((res) => {\r\n      setLastMsg(res.data.message);\r\n      setLastPhoto(res.data.user.photo);\r\n      setLastTimestamp(res.data.timestamp);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSidebarElement();\r\n    const channel = pusher.subscribe('messages');\r\n    channel.bind('newMessage', function (data) {\r\n      getSidebarElement()\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <div\r\n      onClick={() =>\r\n        dispatch(\r\n          setChat({\r\n            chatId: id,\r\n            chatName: chatName,\r\n          })\r\n        )\r\n      }\r\n      className=\"sidebarChat\"\r\n    >\r\n      <Avatar src={lastPhoto} />\r\n      <div className=\"sidebarChat__info\">\r\n        <h3>{chatName}</h3>\r\n        <p>{lastMsg}</p>\r\n        <small>\r\n          {/* {timeago.format(new Date(chatInfo[0]?.timestamp?.toDate()))} */}\r\n          {new Date(parseInt(lastTimestamp)).toDateString()}\r\n        </small>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarChat;\r\n","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\Chat.js",["76","77"],"C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\features\\userSlice.js",[],"C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\Login.js",[],"C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\firebase.js",[],"C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\features\\chatSlice.js",[],"C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\Message.js",["78"],"import { Avatar } from \"@material-ui/core\";\r\nimport React, { forwardRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"./features/userSlice\";\r\nimport \"./Message.css\";\r\nimport * as timeago from \"timeago.js\";\r\n\r\nconst Message = forwardRef(\r\n  (\r\n    { id, timestamp, sender, message  },\r\n    ref\r\n  ) => {\r\n    const user = useSelector(selectUser);\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={`message ${user.email === sender.email && \"message__sender\"}`}\r\n      >\r\n        <Avatar className=\"message__photo\" src={sender.photo} />\r\n        <p>{message}</p>\r\n        {/* <small>{timeago.format(new Date(parseInt(timestamp)).toDateString())}</small> */}\r\n        <small>{new Date(parseInt(timestamp)).toDateString()}</small>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Message;\r\n","C:\\Users\\MXGC\\Documents\\GitHub\\message-clone\\message-frontend\\src\\axios.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":32,"column":6,"nodeType":"85","endLine":32,"endColumn":8,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":26},{"ruleId":"87","severity":1,"message":"91","line":4,"column":10,"nodeType":"89","messageId":"90","endLine":4,"endColumn":17},{"ruleId":"87","severity":1,"message":"92","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":10},{"ruleId":"87","severity":1,"message":"93","line":10,"column":9,"nodeType":"89","messageId":"90","endLine":10,"endColumn":17},{"ruleId":"87","severity":1,"message":"92","line":9,"column":8,"nodeType":"89","messageId":"90","endLine":9,"endColumn":10},{"ruleId":"87","severity":1,"message":"94","line":7,"column":13,"nodeType":"89","messageId":"90","endLine":7,"endColumn":20},{"ruleId":"87","severity":1,"message":"95","line":17,"column":10,"nodeType":"89","messageId":"90","endLine":17,"endColumn":18},{"ruleId":"87","severity":1,"message":"96","line":17,"column":20,"nodeType":"89","messageId":"90","endLine":17,"endColumn":31},{"ruleId":"83","severity":1,"message":"97","line":36,"column":6,"nodeType":"85","endLine":36,"endColumn":10,"suggestions":"98"},{"ruleId":"87","severity":1,"message":"92","line":7,"column":8,"nodeType":"89","messageId":"90","endLine":7,"endColumn":10},{"ruleId":"87","severity":1,"message":"99","line":9,"column":8,"nodeType":"89","messageId":"90","endLine":9,"endColumn":16},{"ruleId":"87","severity":1,"message":"94","line":6,"column":13,"nodeType":"89","messageId":"90","endLine":6,"endColumn":20},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["102"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setChat' is defined but never used.","'db' is defined but never used.","'dispatch' is assigned a value but never used.","'timeago' is defined but never used.","'chatInfo' is assigned a value but never used.","'setChatInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSidebarElement'. Either include it or remove the dependency array.",["103"],"'firebase' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [dispatch]",{"range":"108","text":"109"},"Update the dependencies array to be: [getSidebarElement, id]",{"range":"110","text":"111"},[835,837],"[dispatch]",[1138,1142],"[getSidebarElement, id]"]